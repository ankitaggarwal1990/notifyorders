//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace todo.IOT_SERVICE {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="IOTFunctions_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/IOTFunctions")]
    public partial class IOTFunctions : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetOrderSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendPackedOrderInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderSummaryShippedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderinfoShippedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendRecivedOrderInfoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public IOTFunctions() {
            this.Url = global::todo.Properties.Settings.Default.todo_IOT_SERVICE_IOTFunctions;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetOrderSummaryCompletedEventHandler GetOrderSummaryCompleted;
        
        /// <remarks/>
        public event GetOrderInfoCompletedEventHandler GetOrderInfoCompleted;
        
        /// <remarks/>
        public event SendPackedOrderInfoCompletedEventHandler SendPackedOrderInfoCompleted;
        
        /// <remarks/>
        public event GetOrderSummaryShippedCompletedEventHandler GetOrderSummaryShippedCompleted;
        
        /// <remarks/>
        public event GetOrderinfoShippedCompletedEventHandler GetOrderinfoShippedCompleted;
        
        /// <remarks/>
        public event SendRecivedOrderInfoCompletedEventHandler SendRecivedOrderInfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/IOTFunctions:GetOrderSummary", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/IOTFunctions", ResponseElementName="GetOrderSummary_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/IOTFunctions", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetOrderSummary() {
            this.Invoke("GetOrderSummary", new object[0]);
        }
        
        /// <remarks/>
        public void GetOrderSummaryAsync() {
            this.GetOrderSummaryAsync(null);
        }
        
        /// <remarks/>
        public void GetOrderSummaryAsync(object userState) {
            if ((this.GetOrderSummaryOperationCompleted == null)) {
                this.GetOrderSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderSummaryOperationCompleted);
            }
            this.InvokeAsync("GetOrderSummary", new object[0], this.GetOrderSummaryOperationCompleted, userState);
        }
        
        private void OnGetOrderSummaryOperationCompleted(object arg) {
            if ((this.GetOrderSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderSummaryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/IOTFunctions:GetOrderInfo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/IOTFunctions", ResponseElementName="GetOrderInfo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/IOTFunctions", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetOrderInfo(string orderID) {
            this.Invoke("GetOrderInfo", new object[] {
                        orderID});
        }
        
        /// <remarks/>
        public void GetOrderInfoAsync(string orderID) {
            this.GetOrderInfoAsync(orderID, null);
        }
        
        /// <remarks/>
        public void GetOrderInfoAsync(string orderID, object userState) {
            if ((this.GetOrderInfoOperationCompleted == null)) {
                this.GetOrderInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderInfoOperationCompleted);
            }
            this.InvokeAsync("GetOrderInfo", new object[] {
                        orderID}, this.GetOrderInfoOperationCompleted, userState);
        }
        
        private void OnGetOrderInfoOperationCompleted(object arg) {
            if ((this.GetOrderInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/IOTFunctions:SendPackedOrderInfo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/IOTFunctions", ResponseElementName="SendPackedOrderInfo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/IOTFunctions", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendPackedOrderInfo(string order_Id, string order_Tag_Id, string product_ID, decimal ordered_Qty, decimal packed_Qty, string product_Tag_ID, int no_of_Trays) {
            object[] results = this.Invoke("SendPackedOrderInfo", new object[] {
                        order_Id,
                        order_Tag_Id,
                        product_ID,
                        ordered_Qty,
                        packed_Qty,
                        product_Tag_ID,
                        no_of_Trays});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendPackedOrderInfoAsync(string order_Id, string order_Tag_Id, string product_ID, decimal ordered_Qty, decimal packed_Qty, string product_Tag_ID, int no_of_Trays) {
            this.SendPackedOrderInfoAsync(order_Id, order_Tag_Id, product_ID, ordered_Qty, packed_Qty, product_Tag_ID, no_of_Trays, null);
        }
        
        /// <remarks/>
        public void SendPackedOrderInfoAsync(string order_Id, string order_Tag_Id, string product_ID, decimal ordered_Qty, decimal packed_Qty, string product_Tag_ID, int no_of_Trays, object userState) {
            if ((this.SendPackedOrderInfoOperationCompleted == null)) {
                this.SendPackedOrderInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendPackedOrderInfoOperationCompleted);
            }
            this.InvokeAsync("SendPackedOrderInfo", new object[] {
                        order_Id,
                        order_Tag_Id,
                        product_ID,
                        ordered_Qty,
                        packed_Qty,
                        product_Tag_ID,
                        no_of_Trays}, this.SendPackedOrderInfoOperationCompleted, userState);
        }
        
        private void OnSendPackedOrderInfoOperationCompleted(object arg) {
            if ((this.SendPackedOrderInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendPackedOrderInfoCompleted(this, new SendPackedOrderInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/IOTFunctions:GetOrderSummaryShipped", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/IOTFunctions", ResponseElementName="GetOrderSummaryShipped_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/IOTFunctions", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetOrderSummaryShipped(string destination_ID) {
            this.Invoke("GetOrderSummaryShipped", new object[] {
                        destination_ID});
        }
        
        /// <remarks/>
        public void GetOrderSummaryShippedAsync(string destination_ID) {
            this.GetOrderSummaryShippedAsync(destination_ID, null);
        }
        
        /// <remarks/>
        public void GetOrderSummaryShippedAsync(string destination_ID, object userState) {
            if ((this.GetOrderSummaryShippedOperationCompleted == null)) {
                this.GetOrderSummaryShippedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderSummaryShippedOperationCompleted);
            }
            this.InvokeAsync("GetOrderSummaryShipped", new object[] {
                        destination_ID}, this.GetOrderSummaryShippedOperationCompleted, userState);
        }
        
        private void OnGetOrderSummaryShippedOperationCompleted(object arg) {
            if ((this.GetOrderSummaryShippedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderSummaryShippedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/IOTFunctions:GetOrderinfoShipped", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/IOTFunctions", ResponseElementName="GetOrderinfoShipped_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/IOTFunctions", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetOrderinfoShipped(string order_ID, string order_Tag_Id) {
            this.Invoke("GetOrderinfoShipped", new object[] {
                        order_ID,
                        order_Tag_Id});
        }
        
        /// <remarks/>
        public void GetOrderinfoShippedAsync(string order_ID, string order_Tag_Id) {
            this.GetOrderinfoShippedAsync(order_ID, order_Tag_Id, null);
        }
        
        /// <remarks/>
        public void GetOrderinfoShippedAsync(string order_ID, string order_Tag_Id, object userState) {
            if ((this.GetOrderinfoShippedOperationCompleted == null)) {
                this.GetOrderinfoShippedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderinfoShippedOperationCompleted);
            }
            this.InvokeAsync("GetOrderinfoShipped", new object[] {
                        order_ID,
                        order_Tag_Id}, this.GetOrderinfoShippedOperationCompleted, userState);
        }
        
        private void OnGetOrderinfoShippedOperationCompleted(object arg) {
            if ((this.GetOrderinfoShippedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderinfoShippedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/IOTFunctions:SendRecivedOrderInfo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/IOTFunctions", ResponseElementName="SendRecivedOrderInfo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/IOTFunctions", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendRecivedOrderInfo(string order_Id, string order_Tag_Id, string product_ID, decimal ordered_Qty, decimal recieved_Qty, string product_Tag_ID, int no_of_Trays) {
            object[] results = this.Invoke("SendRecivedOrderInfo", new object[] {
                        order_Id,
                        order_Tag_Id,
                        product_ID,
                        ordered_Qty,
                        recieved_Qty,
                        product_Tag_ID,
                        no_of_Trays});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendRecivedOrderInfoAsync(string order_Id, string order_Tag_Id, string product_ID, decimal ordered_Qty, decimal recieved_Qty, string product_Tag_ID, int no_of_Trays) {
            this.SendRecivedOrderInfoAsync(order_Id, order_Tag_Id, product_ID, ordered_Qty, recieved_Qty, product_Tag_ID, no_of_Trays, null);
        }
        
        /// <remarks/>
        public void SendRecivedOrderInfoAsync(string order_Id, string order_Tag_Id, string product_ID, decimal ordered_Qty, decimal recieved_Qty, string product_Tag_ID, int no_of_Trays, object userState) {
            if ((this.SendRecivedOrderInfoOperationCompleted == null)) {
                this.SendRecivedOrderInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendRecivedOrderInfoOperationCompleted);
            }
            this.InvokeAsync("SendRecivedOrderInfo", new object[] {
                        order_Id,
                        order_Tag_Id,
                        product_ID,
                        ordered_Qty,
                        recieved_Qty,
                        product_Tag_ID,
                        no_of_Trays}, this.SendRecivedOrderInfoOperationCompleted, userState);
        }
        
        private void OnSendRecivedOrderInfoOperationCompleted(object arg) {
            if ((this.SendRecivedOrderInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendRecivedOrderInfoCompleted(this, new SendRecivedOrderInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetOrderSummaryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetOrderInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SendPackedOrderInfoCompletedEventHandler(object sender, SendPackedOrderInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendPackedOrderInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendPackedOrderInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetOrderSummaryShippedCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetOrderinfoShippedCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SendRecivedOrderInfoCompletedEventHandler(object sender, SendRecivedOrderInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendRecivedOrderInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendRecivedOrderInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591